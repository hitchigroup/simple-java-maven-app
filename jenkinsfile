pipeline {
    agent any

    environment {
        // Define SonarQube server URL and credentials
        SONARQUBE_SERVER = 'SonarQube'
        SONARQUBE_SCANNER = '/usr/local/bin/sonar-scanner' // Path to sonar-scanner, adjust as needed
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout your code
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Compile your project (adjust for your build tool)
                sh 'mvn clean install'  // Maven example, adjust if you use a different build tool
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    // Run SonarQube analysis using sonar-scanner
                    withSonarQubeEnv(SONARQUBE_SERVER) {
                        sh "${SONARQUBE_SCANNER} -Dsonar.projectKey=my_project_key -Dsonar.sources=src"
                    }
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    // Wait for SonarQube analysis to complete and check the Quality Gate status
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}

